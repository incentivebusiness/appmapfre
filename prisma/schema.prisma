datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PlanType {
  BASICO
  MEDIO
  PLUS
}

enum ContratedPlan {
  BASIC
  MEDIUM
  PLUS
}

enum Role {
  USER
  EMPLOYEE
  MANAGER
  ADMIN
}

model Company {
  id           Int           @id @default(autoincrement())
  cnpj         String        @unique
  name         String        @unique
  preRegisters PreRegister[]
  employees    User[]
}

model PreRegister {
  id           Int       @id @default(autoincrement())
  name         String
  cpf          String    @unique
  email        String    @unique
  role         UserRole
  registeredAt DateTime?
  companyId    Int // Relacionamento com a empresa
  company      Company   @relation(fields: [companyId], references: [id])
  completed    Boolean   @default(false)
}

enum UserRole {
  EMPLOYEE
  MANAGER
}

model User {
  id             Int      @id @default(autoincrement())
  code           String   @unique @default(cuid())
  name           String   @db.VarChar(80)
  cpf            String   @unique @db.VarChar(11)
  gender         String   @db.VarChar(1)
  socialName     String?
  email          String   @unique @db.VarChar(255)
  hashedPassword String
  birthDate      DateTime @db.Date
  cel            String   @db.VarChar(20)
  role           Role     @default(USER)

  created DateTime @default(now())
  updated DateTime @updatedAt

  document_signed   Boolean        @default(false)
  payment_completed Boolean        @default(false)
  plan_selected     PlanType?
  contrated_plan    ContratedPlan?
  company           Company?       @relation(fields: [companyId], references: [id])
  companyId         Int?

  address       Address? @relation(fields: [addressId], references: [id])
  addressId     Int?     @unique // O campo addressId deve ser único para garantir a relação 1:1
  luckyNumberId Int?     @unique // Adicionado para garantir que o número da sorte é único para o usuário

  luckyNumber LuckyNumber? @relation(fields: [luckyNumberId], references: [id])
}

model Address {
  id           Int     @id @default(autoincrement())
  street       String  @db.VarChar(255)
  number       String  @db.VarChar(20)
  complement   String? @db.VarChar(255)
  neighborhood String  @db.VarChar(255)
  city         String  @db.VarChar(255)
  state        String  @db.VarChar(2) // Pode ser uma sigla como 'SP', 'RJ', etc.
  zipCode      String  @db.VarChar(8) // Formato de CEP no Brasil

  user User? @relation
}

model LuckyNumber {
  id         Int     @id @default(autoincrement())
  number     String
  series     String?
  loteClient String?
  qnty       String?

  user User? @relation

  @@unique([number, series]) // Garantir que o número seja único dentro da série
}
