

// model Contract {
//   id          Int    @id @default(autoincrement())
//   number      String
//   version     String
//   keyRegistre String

//   created      DateTime        @default(now())
//   updated      DateTime        @updatedAt
//   contractUser ContractUsers[]
// }

// model ContractUsers {
//   id         Int @id @default(autoincrement())
//   userId     Int
//   contractId Int

//   user     User     @relation(fields: [userId], references: [id])
//   contract Contract @relation(fields: [contractId], references: [id])

//   @@unique([userId, contractId])
// }


// // valorLimiteFuneral: string;
// // valorLimiteDespesaMedica: string;
// model Service {
//   id         Int    @id @default(autoincrement())
//   name       String
//   limitValue Int

//   created DateTime @default(now())
//   updated DateTime @updatedAt
// }

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

 model User {
  id             Int       @id @default(autoincrement())
  code           String    @unique @default(cuid())
  name           String
  socialName     String?
  email          String    @unique
  hashedPassword String


  created      DateTime        @default(now())
  updated      DateTime        @updatedAt

  UsuarioAssistencia usuarioAssistencia[]
}

model Registro {
  id              Int      @id @default(autoincrement())
  contractId      Int
  serviceId       Int

  contract        Contrato         @relation(fields: [contractId], references: [id])
  serviceContract ServicoContrato  @relation(fields: [serviceId], references: [id])

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model UsuarioAssistencia {
  id             Int      @id @default(autoincrement())
  nome           String   @db.VarChar(80)
  cpf            String?   @db.VarChar(11)
  cnpj           String?   @db.VarChar(14)
  dataNascimento DateTime @db.Date
  genero         String?  @db.VarChar(1)
  email          String?  @db.VarChar(60)
  telefone1      String   @db.VarChar(20)
  telefone2      String?  @db.VarChar(20)
  telefone3      String?  @db.VarChar(20)
  telefone4      String?  @db.VarChar(20)
  userId  Int? 

  created DateTime @default(now())
  updated DateTime @updatedAt

  endereco       Endereco[]
  contrato       Contrato[]
  animalEstimacao AnimalEstimacao[]
  dependente     Dependente[]
}

model Endereco {
  id          Int    @id @default(autoincrement())
  endereco    String @db.VarChar(80)
  uf          String @db.VarChar(2)
  cidade      String @db.VarChar(35)
  bairro      String @db.VarChar(35)
  cep         String @db.VarChar(10)
  telefone    String @db.VarChar(20)
  usuarioId   Int

  created DateTime @default(now())
  updated DateTime @updatedAt

  usuario     UsuarioAssistencia @relation(fields: [usuarioId], references: [id])
}

model AnimalEstimacao {
  id          Int       @id @default(autoincrement())
  nome        String?   @db.VarChar(25)
  dataNasc    DateTime? @db.Date
  racaId      Int
  usuarioId   Int

  created DateTime @default(now())
  updated DateTime @updatedAt

  raca        RacaEspecie         @relation(fields: [racaId], references: [id])
  usuario     UsuarioAssistencia  @relation(fields: [usuarioId], references: [id])
}

model RacaEspecie {
  id          Int                @id @default(autoincrement())
  descricao   String?            @db.VarChar(25)

  created DateTime @default(now())
  updated DateTime @updatedAt

  animais     AnimalEstimacao[]
}

model Veiculo {
  id          Int                @id @default(autoincrement())
  placa       String             @db.VarChar(10)
  chassi      String             @db.VarChar(20)
  cor         String?            @db.VarChar(10)
  anoFabricacao Int
  modeloId    Int

  created DateTime @default(now())
  updated DateTime @updatedAt

  modelo      ModeloVeiculo      @relation(fields: [modeloId], references: [id])
}

model ModeloVeiculo {
  id          Int                @id @default(autoincrement())
  descricao   String             @db.VarChar(40)
  marcaId     Int

created DateTime @default(now())
  updated DateTime @updatedAt

  marca       MarcaVeiculo       @relation(fields: [marcaId], references: [id])
  veiculos    Veiculo[]
}

model MarcaVeiculo {
  id          Int                @id @default(autoincrement())
  descricao   String             @db.VarChar(40)

  created DateTime @default(now())
  updated DateTime @updatedAt

  modelos     ModeloVeiculo[]
}

model Dependente {
  id          Int                @id @default(autoincrement())
  nome        String             @db.VarChar(80)
  usuarioId   Int
  tipoId      Int

created DateTime @default(now())
updated DateTime @updatedAt

  usuario     UsuarioAssistencia @relation(fields: [usuarioId], references: [id])
  tipo        TipoDependente     @relation(fields: [tipoId], references: [id])
}

model TipoDependente {
  id          Int                @id @default(autoincrement())
  descricao   String             @db.VarChar(80)

  created DateTime @default(now())
  updated DateTime @updatedAt

  dependentes Dependente[]
}

model Contrato {
  id              Int             @id @default(autoincrement())
  numero          String          @db.VarChar(18)
  versao          Int
  chave           String          @db.VarChar(30)
  subChave        String          @db.VarChar(15)
  tipoMovimento   String          @db.VarChar(1)
  inicioVigencia  DateTime        @db.Date
  fimVigencia     DateTime        @db.Date
  usuarioId       Int

  created DateTime @default(now())
  updated DateTime @updatedAt

  usuario         UsuarioAssistencia @relation(fields: [usuarioId], references: [id])
  servicoContrato ServicoContrato[]
}

model ServicoContrato {
  id              Int      @id @default(autoincrement())
  servicoId       Int
  contratoId      Int

  created DateTime @default(now())
  updated DateTime @updatedAt

  servico         Servico  @relation(fields: [servicoId], references: [id])
  contrato        Contrato @relation(fields: [contratoId], references: [id])
}

model Servico {
  id              Int                @id @default(autoincrement())
  descricao       String             @db.VarChar(100)
 
  created DateTime @default(now())
  updated DateTime @updatedAt

  servicoContratos ServicoContrato[]
}

